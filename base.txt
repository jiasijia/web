su			切换用户
su - 		切换用户的时候同时切换环境变量
sudo     	以root的身份的执行命令，需要编辑/etc/sudoers文件
sync 		强制把内存的数据写入到硬盘
man(info)	在系统里查询帮助文档，比较详细，--help为命令自带的比较简短的参数说明
shutdown    option 		time  			警告信息 (shutdown 会先停掉系统的服务再关机)
		 -r 重启       -t/几秒后关机
		 -h 关机 	    20:20
		 -k 仅发送参数
run-level(执行等级)	用init来切换   例如：init 0表示关机
					level 0   关机
					level 3   纯文本模式
					level 5   图形接口模式
					level 6   重新启动
date 		日期
cal			日历
cal   -y   今年的日历
	  10 2016  显示2016年10月的日历
bc			计算器
账号信息都记录在/etc/passwd里, 密码都记录在/etc/shadow里，组名都记录在/etc/group里
chgrp		改变所属群组
		-R 	递归更改
chown		改变拥有者
chmod		改变权限
		777(rwx+rwx+rwx) 或者a-x,u-x,g-x,o-x(不知道原有权限的情况下进行的权限变更操作)
		r-- 某用户具有用ls查询该目录列表的权限，但不能cd进入,能否进入目录是x来决定，目录的可执行权限就是能否进入

ls -l --full-time 显示目录的完整时间

各目录作用
bin		单人维护模式下还能被操作的指令，可以被root和一般账号使用，例如cat chmod chown date mv
boot	开机用到的档案，包括linux核心档案以及开机选单与开机所需配置文件等
dev		在linux系统中，任何装置与接口设备都是以档案的形态存在于这个目录当中的
etc		系统主要的配置文件几乎都在这个目录内，例如账号密码，各种服务的启始档等
home	系统默认的用户家目录
lib		开机时会用到的函式库，以及在执行/bin或/sbin底下的指令会呼叫的函式库
media   可移除的装置，包括软盘，光盘，DVD等装置都暂时挂载于此
mnt		暂时挂载某些额外装置可以放到这个目录里，很早以前作用和media是相同的，有了media之后，就用来暂时挂载用了
opt 	安装软件
sbin    Linux 有非常多指令是用来设定系统环境的，这些指令只有 root 																					才能够利用来『设定』系统，其他用户最多只能用来『查询』而已（系统管理员可以使用的命令）
srv		service的缩写,系统启动服务时可以访问的数据库目录
tmp		临时文件
usr		Unix Software Resource(Unix操作系统软件资源)的缩写

lsb_release		查看当前系统的发行版信息
uname -r 		查看linux版本号


cd -	返回上一次的工作目录
pwd -P  显示真正的路径，而不是链接档本身
mkdir -P 1/2/3/4   直接建立递归目录
mkdir -m 777	   直接设置目录权限

cp -a	复制所有属性和权限=pdr
   -i 	覆盖前进行询问
   -r 	递归复制
   -p   复制所有属性
   -d 	如果是链接则复制链接本身属性
   -s  -l  建立链接，快捷方式

basename 取得文件名
dirname  取得目录名

#####查看文件内容
cat		从第一行开始显示全部内容
	-A  vET整合，列出特殊字符
	-b  显示行号，空白行不显示
	-n 	显示行号，空白行显示
	-T  把tab键列出来
	-E  将结尾的换行符$显示出来
	-v  列出一些特殊字符

tac		从最后一行显示，是cat倒着写
nl		显示的时候输出行号,可以对行号进行比较多的显示设计，包括位数与是否自动补齐0等的功能
	-n ln 行号左对齐
	-n rn 行号右对齐
	-n rz 行号右对齐补零
	-w    行号位数

more	一页一页的显示
	more -10 xxx 每页显示10行
	space	向下翻一页
	enter   向下翻一行
	:f 		显示出文件名和当前的行号

less    同more，但是可以向前翻页

head	只看前几行
	-n 10   显示前10行
	-n -10  显示除了最后10行

tail 	只看最后几行
	-n +10  显示第10行以后的
	显示10行到20行 可以先head再管道再tail  head -n 20 | tail -n 10  => sed -n '10,20p'
	-f  持续侦测文件内容
od		以二进制的方式读取文件内容

touch 	新建一个文件
		mtime 内容更新时间
		atime 读取时间
		ctime 权限属性更新时间

umask	查看默认权限设置
	 -S 以字符形式显示
	 0022,后三位022表示每组权限被减掉的权限，所以新建的档案权限为-rw-r--r-,目录权限为drwxr-xr-x;
	 umask 022  设置默认权限为022

chatter 设置隐藏属性
		+a/-a 当设定 a 之后，这个档案将只能增加数据，而不能删除也不能修改数据
		+i/-i 可以让一个档案『不能被删除、改名、设定连结也无法写入或新增资料

file 	查看文件格式
which   搜寻指令的完整文件名可用 which 或 type ，这两个指令都是透过 PATH 变量来搜寻文件名
	-a  在当前用户的所有PATH里查找

whereis locate 速度快，搜索数据库,不实际搜寻文件系统
	-b  只找二进制binary档案
	-m 	只找在说明文件manual路径下的档案
	-s  只找source来源档案
	-u 	除了上面三种

find    速度慢，查找硬盘,加入许多选项来直接查询文件系统

SUID    档案具有 SUID 的特殊权限时，代表当用户执行此一 binary 程序时，在执行过程中用户会暂时具有程序拥有者的权限
		SUID 仅对二进制程序有效
SGID  	目录具有 SGID 的特殊权限时，代表用户在这个目录底下新建的档案之群组都会与该目录的组名相同
		chmod 2770 directory 给目录增加SGID权限 -drwxrws---;
SBIT 	目录具有 SBIT 的特殊权限时，代表在该目录下用户建立的档案只有自己与 root 能够删除！

ll -i 	查看档案的inode

压缩=====
*.Z 		compress 程序压缩的档案；
*.gz 		gzip 程序压缩的档案；
*.bz2 		bzip2 程序压缩的档案；
*.tar 		tar 程序打包的数据，并没有压缩过
*.tar.gz 	tar 程序打包的档案，其中并且经过 gzip 的压缩
*.tar.bz2 	tar 程序打包的档案，其中并且经过 bzip2 的压缩

tar将很多档案打包起来，然后bzip2和gzip压缩

gzip	-v  显示档案的压缩比等信息
		-c  输出压缩数据
		-d  解压缩 (等同于  gunzip)
		-#  压缩等级，-1最快，压缩比最差，-9最慢，压缩比最好，默认的是-6;

bzip2 	同上
		-k  保留源文件
		-z  压缩的参数
zcat	读取纯文本文档被gzip压缩后的文件
bzcat	读取纯文本文档被bzip2压缩后的文件

tar 	-c  建立打包档案 搭配-v查看档名
		-t  查看档名
		-x  解打包或解压缩，可以搭配-C在特定目录打开 -c -t -x 不可同时出现
		-j  通过bzip2进行压缩/解压缩
		-z  通过gzip进行压缩/解压缩
		-v  在压缩过程中，将正在处理的文件名显示出来
		-f  后面接立刻要处理的文件名，最好单独写一个选项
		-C  用在解压缩,在某个特定目录
		-p  保留备份数据的原本权限和属性
		-P  保留绝对路径(默认不保留，如果保留了，解压缩的时候会直接覆盖原来的文件)
		--exclude=FILE： 在压缩的过程中，不要将某些档案打包

常用命令--------
压缩文件  					tar -jcv/zcv/zpcv(保留权限) -f 文件名 要解压缩的文件 -C 解压缩的目录
查看压缩包目录  			tar -jtv -f  文件名
在压缩包里查找某个文件		tar -jtv -f  文件名 | grep 'shadow(关键词)'

du -sm 估计一个文件的大小，以M来表示
dump  备份文件
restore 恢复文件

[Tab] 接在一串指令的第一个字的后面，则为命令补全；
[Tab] 接在一串指令的第二个字以后时，则为『档案补齐』！

stty   -a 	显示终端环境设置

组合键
	Ctrl + C 终止目前的命令
	Ctrl + D 输入结束 (EOF)，例如邮件结束的时候；
	Ctrl + M 就是 Enter 啦！
	Ctrl + S 暂停屏幕的输出
	Ctrl + Q 恢复屏幕的输出
	Ctrl + U 在提示字符下，将整列命令删除
	Ctrl + Z 『暂停』目前的命令


# 	批注符号：这个最常被使用在 script 当中，视为说明！在后的数据均不执行
\ 	跳脱符号：将『特殊字符或通配符』还原成一般字符
| 	管线 (pipe)：分隔两个管线命令的界定(后两节介绍)；
; 	连续指令下达分隔符：连续性命令的界定 (注意！与管线命令并不相同)
~ 	用户的家目录
$ 	取用变数前导符：亦即是变量之前需要加的变量取代值
& 	工作控制 (job control)：将指令变成背景下工作
! 	逻辑运算意义上的『非』 not 的意思！
/ 	目录符号：路径分隔的符号
>, >> 数据流重导向：输出导向，分别是『取代』与『累加』
	cat aa* >> b把所有以aa开头的文件都追加写入到b里
<, << 数据流重导向：输入导向 (这两个留待下节介绍)
' ' 单引号，不具有变量置换的功能
" " 具有变量置换的功能！
